A51 MACRO ASSEMBLER  LAB                                                                  08/18/2015 16:47:32 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\lab.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE lab.asm SET(SMALL) DEBUG PRINT(.\Listings\lab.lst) OBJECT(.\Objects\lab
                      .obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ; This subroutine writes characters on the LCD
  00A0                 2     LCD_data equ P2    ;LCD Data port
  0080                 3     LCD_rs   equ P0.0  ;LCD Register Select
  0081                 4     LCD_rw   equ P0.1  ;LCD Read/Write
  0082                 5     LCD_en   equ P0.2  ;LCD Enable
                       6     
0000                   7     ORG 0000H
0000 020200            8     ljmp start
                       9     
0200                  10     org 200h
0200                  11     start:;ALSO THE MAIN
0200 75A000           12           mov P2,#00h
0203 759000           13               mov P1,#00h
                      14               ;initial delay for lcd power up
                      15     
                      16     ;here1:setb p1.0
0206 51BD             17           acall delay
                      18     ;         clr p1.0
0208 51BD             19               acall delay
                      20     ;         sjmp here1
                      21     
020A 5138             22           acall lcd_init      ;initialise LCD
                      23             
020C 51BD             24               acall delay
020E 51BD             25               acall delay
0210 51BD             26               acall delay
0212 78FF             27     MOV R0,#0FFh
0214                  28     AGAIN:
0214 E8               29     MOV A,R0
0215 F4               30     CPL A
0216 F6               31     MOV @R0,A
0217 D8FB             32     DJNZ R0,AGAIN
0219 7581CF           33     MOV SP,#0CFH
                      34     
021C                  35     AGAIN1:
021C 7136             36               ACALL display;Displays array specified by P1
                      37               
021E 754F0A           38                     MOV 4FH, #10  ; Delay time
0221 12029F           39                     LCALL longDelay;5s delay
                      40             ;%%%%%%%%%%%%%%%%%%%%%%%%%%     
0224 75A000           41               mov P2,#00h
0227 759000           42               mov P1,#00h
022A 51BD             43           acall delay
                      44     ;         clr p1.0
022C 51BD             45               acall delay
                      46     ;         sjmp here1
022E 5138             47               acall lcd_init      ;initialise LCD
0230 51BD             48               acall delay
0232 51BD             49               acall delay
0234 51BD             50               acall delay
                      51               ;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5
0236 80E4             52               SJMP AGAIN1     
                      53     ;************************************************************************
                      54     
                      55     ;------------------------LCD Initialisation routine----------------------------------------
                             ------------
0238                  56     lcd_init:
A51 MACRO ASSEMBLER  LAB                                                                  08/18/2015 16:47:32 PAGE     2

                      57     
0238 75A038           58              mov   LCD_data,#38H  ;Function set: 2 Line, 8-bit, 5x7 dots
023B C280             59              clr   LCD_rs         ;Selected command register
023D C281             60              clr   LCD_rw         ;We are writing in instruction register
023F D282             61              setb  LCD_en         ;Enable H->L
0241 51BD             62                      acall delay
                      63     
0243 C282             64              clr   LCD_en
                      65     
0245 51BD             66                  acall delay
                      67     
0247 75A00C           68              mov   LCD_data,#0CH  ;Display on, Curson off
024A C280             69              clr   LCD_rs         ;Selected instruction register
024C C281             70              clr   LCD_rw         ;We are writing in instruction register
024E D282             71              setb  LCD_en         ;Enable H->L
0250 51BD             72                      acall delay
0252 C282             73              clr   LCD_en
                      74     
0254 51BD             75                      acall delay
0256 75A001           76              mov   LCD_data,#01H  ;Clear LCD
0259 C280             77              clr   LCD_rs         ;Selected command register
025B C281             78              clr   LCD_rw         ;We are writing in instruction register
025D D282             79              setb  LCD_en         ;Enable H->L
                      80     
025F 51BD             81                      acall delay
                      82     
0261 C282             83              clr   LCD_en
                      84     
                      85              
                      86     
0263 51BD             87                     acall delay
                      88     
0265 75A006           89              mov   LCD_data,#06H  ;Entry mode, auto increment with no shift
0268 C280             90              clr   LCD_rs         ;Selected command register
026A C281             91              clr   LCD_rw         ;We are writing in instruction register
026C D282             92              setb  LCD_en         ;Enable H->L
026E 51BD             93                      acall delay
0270 C282             94              clr   LCD_en
                      95     
0272 51BD             96                      acall delay
0274 22               97                      ret                  ;Return from routine
                      98     
                      99     
                     100     
                     101     ;-----------------------command sending routine-------------------------------------
                     102     
0275                 103      lcd_command:
                     104     
0275 F5A0            105              mov   LCD_data,A     ;Move the command to LCD port
                     106     
0277 C280            107              clr   LCD_rs         ;Selected command register
                     108     
0279 C281            109              clr   LCD_rw         ;We are writing in instruction register
                     110     
027B D282            111              setb  LCD_en         ;Enable H->L
                     112     
027D 51BD            113                      acall delay
                     114     
027F C282            115              clr   LCD_en
                     116     
0281 51BD            117                      acall delay
                     118     
                     119         
                     120     
0283 22              121              ret  
                     122     
A51 MACRO ASSEMBLER  LAB                                                                  08/18/2015 16:47:32 PAGE     3

                     123     ;-----------------------data sending routine-------------------------------------          
                                       
                     124     
0284                 125      lcd_senddata:
                     126     
0284 F5A0            127              mov   LCD_data,A     ;Move the command to LCD port
                     128     
0286 D280            129              setb  LCD_rs         ;Selected data register
                     130     
0288 C281            131              clr   LCD_rw         ;We are writing
                     132     
028A D282            133              setb  LCD_en         ;Enable H->L
                     134     
028C 51BD            135                      acall delay
                     136     
028E C282            137              clr   LCD_en
                     138     
0290 51BD            139              acall delay
                     140     
0292 51BD            141                      acall delay
                     142     
0294 22              143              ret                  ;Return from busy routine
                     144     
                     145     
                     146     
                     147     ;-----------------------text strings sending routine-------------------------------------
                     148     
0295                 149     lcd_sendstring:
                     150     
0295 E4              151              clr   a                 ;clear Accumulator for any previous data
                     152     
0296 93              153              movc  a,@a+dptr         ;load the first character in accumulator
                     154     
0297 6005            155              jz    exit              ;go to exit if zero
                     156     
0299 5184            157              acall lcd_senddata      ;send first char
                     158     
029B A3              159              inc   dptr              ;increment data pointer
                     160     
029C 80F7            161              sjmp  LCD_sendstring    ;jump back to send the next character
                     162     
029E                 163     exit:
                     164     
029E 22              165              ret                     ;End of routine
                     166     
                     167     ;************************************************************************
                     168     ;================================================
                     169     
                     170     
                     171     ;----------------------delay routine-----------------------------------------------------
029F                 172     longDelay:              ; this subroutine is for introducing delay
                     173     
                     174             USING 0
                     175     
                     176             ;push registers being used in this subroutine on the stack               
                     177     
029F C000            178             PUSH AR0
02A1 C001            179             PUSH AR1
02A3 C002            180             PUSH AR2
                     181     
02A5 E54F            182             MOV A,4FH
02A7 75F00A          183             MOV B,#10
02AA A4              184             MUL AB   ; for calculting the number of cycle delay1 should run
02AB F8              185             MOV R0,A
02AC                 186             delay1:      
02AC 7AC8            187                     MOV R2,#200
A51 MACRO ASSEMBLER  LAB                                                                  08/18/2015 16:47:32 PAGE     4

02AE                 188                             BACK1:
02AE 79FF            189                                     MOV R1,#0FFH
02B0                 190                                     BACK:
02B0 D9FE            191                                             DJNZ R1,BACK
02B2 DAFA            192                             DJNZ R2,BACK1
02B4 D8F6            193             DJNZ R0,delay1
                     194             ;restored registers pushed
02B6 D002            195             POP AR2
02B8 D001            196             POP AR1
02BA D000            197             POP AR0
02BC 22              198             RET
                     199     
                     200     
                     201     
02BD                 202     delay:  
                     203     USING 0
02BD C000            204             PUSH AR0
02BF C001            205             PUSH AR1
02C1 7801            206              mov r0,#1
                     207     
02C3 79FF            208     loop2:   mov r1,#255
                     209     
02C5 D9FE            210     loop1:   djnz r1, loop1
                     211     
02C7 D8FA            212                      djnz r0,loop2
02C9 D001            213     POP AR1
02CB D000            214     POP AR0
02CD 22              215                      ret
                     216               
                     217     ;================================================
                     218     
02CE                 219     ASCIICONV: 
                     220     using 0
02CE C002            221     push ar2
02D0 C003            222     push ar3
02D2 FA              223     MOV R2,A
02D3 540F            224     ANL A,#0Fh
02D5 FB              225     MOV R3,A
02D6 940A            226     SUBB A,#0Ah  ;CHECK IF NIBBLE IS DIGIT OR ALPHABET
02D8 5007            227     JNC ALPHA
                     228     
02DA EB              229     MOV A,R3
02DB 2430            230     ADD A,#30h   ;ADD 30H TO CONV HEX TO ASCII
02DD F5F0            231     MOV B,A
02DF 8005            232     JMP NEXT
                     233     
02E1 EB              234     ALPHA: MOV A,R3  ;ADD 37H TO CONVERT ALPHABET TO ASCII
02E2 2437            235     ADD A,#37h
02E4 F5F0            236     MOV B,A
                     237     
02E6 EA              238     NEXT:MOV A,R2
02E7 54F0            239     ANL A,#0F0h          ;CHECK HIGHER NIBBLE IS DIGIT OR ALPHABET
02E9 C4              240     SWAP A
02EA FB              241     MOV R3,A
02EB 940A            242     SUBB A,#0Ah
02ED 5008            243     JNC ALPHA2 
                     244     
02EF EB              245     MOV A,R3                        ;DIGIT TO ASCII
02F0 2430            246     ADD A,#30h
02F2 D003            247     pop ar3
02F4 D002            248     pop ar2
02F6 22              249     RET     
                     250     
02F7 EB              251     ALPHA2:MOV A,R3
02F8 2437            252     ADD A,#37h           ;ALPHABET TO ASCII
02FA D003            253     pop ar3
A51 MACRO ASSEMBLER  LAB                                                                  08/18/2015 16:47:32 PAGE     5

02FC D002            254     pop ar2
02FE 22              255     RET
                     256     
                     257     ;THIS MODULE INITIALIZES THE WHOLE MEMORY
                     258     
                     259     
02FF                 260     readNibble: 
                     261                     using 0
02FF C001            262                     PUSH AR1 
0301 120307          263                     LCALL LOOP4
0304 D001            264                     POP AR1
0306 22              265                     RET
0307                 266     LOOP4:
0307 7590F0          267                     MOV P1,#0F0h    ; to ON the LEDs
030A 754F0A          268                     MOV 4FH, #10            ; DELAY OF 5 SEC
030D 12029F          269                     LCALL longDelay
0310 75900F          270                     MOV P1,#0Fh             ; Setup internal latch for P1.3 - P1.0 high     so 
                             slide switches can be read
0313 A990            271                     MOV R1,P1                   ; read port lines P1.3 - P1.0 where slide switc
                             hes are connected
0315 754F02          272                     MOV 4fh, #2                     ; delay for 1 sec
0318 12029F          273                     LCALL longDelay
031B E9              274                     MOV A,R1 
031C C4              275                     SWAP A                          ; swapped the content of A
031D 440F            276                     ORL A,#0FH
031F F590            277                 MOV P1,A                    ;show the entered value on led
0321 754F04          278                     MOV 4FH, #4
0324 12029F          279                     LCALL longDelay
0327 75900F          280                     MOV P1, #0FH            ; Setup internal latch for P1.3 - P1.0 high     so 
                             slide switches can be read
032A E590            281                     MOV A, P1                       ;READ THE CONTENT OF SWITCHES
032C 89F0            282                     mov b,r1
032E B5F0D6          283                     CJNE A, b, LOOP4; CHECK THE VALUE ENTERED, IF USER CONFIRMED THEN STORE THE
                              VALUE AT 4EH ELSE GO BACK TO LOOP
                     284     ;MOV 4EH, r1 
0331 E9              285     MOV A, r1 
0332 C4              286     SWAP A
0333 54F0            287     ANL A,#0F0H
0335 22              288     RET
                     289     
0336                 290     display:
0336 1202FF          291     LCALL readNibble
0339 F8              292     MOV R0,A
                     293     
033A 7C02            294     MOV R4,#2
033C                 295     AGAIN5:
                     296     ;=================
033C 75A000          297                     mov P2,#00h
033F 759000          298                     mov P1,#00h
0342 51BD            299           acall delay
                     300     ;         clr p1.0
0344 51BD            301               acall delay
                     302     ;         sjmp here1
0346 5138            303               acall lcd_init      ;initialise LCD
0348 51BD            304               acall delay
034A 51BD            305               acall delay
034C 51BD            306               acall delay
                     307     ;=================
                     308     
034E 7480            309     MOV A,#80H;FIRST LINE
0350 5175            310     ACALL lcd_command
0352 51BD            311     acall delay
0354 7D04            312     mov r5,#4; for printing 4 chars
0356                 313     firstline:
0356 12037B          314     lcall space
0359 E6              315     mov a,@r0
A51 MACRO ASSEMBLER  LAB                                                                  08/18/2015 16:47:32 PAGE     6

035A 120388          316     lcall print
035D 08              317     inc r0
035E DDF6            318     djnz r5,firstline
                     319     
                     320     
0360 74C0            321     mov a,#0c0h;SECOND LINE
0362 5175            322     ACALL lcd_command
0364 51BD            323     acall delay
0366 7D04            324     mov r5,#4; for printing 4 chars
0368                 325     secondline:
0368 12037B          326     lcall space
036B E6              327     mov a,@r0
036C 120388          328     lcall print
036F 08              329     inc r0
0370 DDF6            330     djnz r5,secondline
0372 754F0A          331     MOV 4FH, #10  ; Delay time
0375 12029F          332     LCALL longDelay;5s delay
0378 DCC2            333     DJNZ R4,AGAIN5
037A 22              334     RET
                     335     
037B                 336     space:
037B C0E0            337     push ACC
037D 51BD            338     acall delay
037F 7420            339     mov a,#' '
0381 5184            340     acall lcd_senddata
0383 51BD            341     acall delay
0385 D0E0            342     POP ACC
0387 22              343     ret
                     344     
0388                 345     print:
0388 C0E0            346             PUSH ACC
038A 1202CE          347             lcall ASCIICONV
038D 5184            348             acall lcd_senddata
038F E5F0            349             mov a,b
0391 5184            350             acall lcd_senddata
0393 51BD            351             acall delay
0395 D0E0            352             POP ACC
0397 22              353     ret
                     354     ;--------------------
                     355     end
A51 MACRO ASSEMBLER  LAB                                                                  08/18/2015 16:47:32 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

ACC. . . . . . . .  D ADDR   00E0H   A   
AGAIN. . . . . . .  C ADDR   0214H   A   
AGAIN1 . . . . . .  C ADDR   021CH   A   
AGAIN5 . . . . . .  C ADDR   033CH   A   
ALPHA. . . . . . .  C ADDR   02E1H   A   
ALPHA2 . . . . . .  C ADDR   02F7H   A   
AR0. . . . . . . .  D ADDR   0000H   A   
AR1. . . . . . . .  D ADDR   0001H   A   
AR2. . . . . . . .  D ADDR   0002H   A   
AR3. . . . . . . .  D ADDR   0003H   A   
ASCIICONV. . . . .  C ADDR   02CEH   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BACK . . . . . . .  C ADDR   02B0H   A   
BACK1. . . . . . .  C ADDR   02AEH   A   
DELAY. . . . . . .  C ADDR   02BDH   A   
DELAY1 . . . . . .  C ADDR   02ACH   A   
DISPLAY. . . . . .  C ADDR   0336H   A   
EXIT . . . . . . .  C ADDR   029EH   A   
FIRSTLINE. . . . .  C ADDR   0356H   A   
LCD_COMMAND. . . .  C ADDR   0275H   A   
LCD_DATA . . . . .  D ADDR   00A0H   A   
LCD_EN . . . . . .  B ADDR   0080H.2 A   
LCD_INIT . . . . .  C ADDR   0238H   A   
LCD_RS . . . . . .  B ADDR   0080H.0 A   
LCD_RW . . . . . .  B ADDR   0080H.1 A   
LCD_SENDDATA . . .  C ADDR   0284H   A   
LCD_SENDSTRING . .  C ADDR   0295H   A   
LONGDELAY. . . . .  C ADDR   029FH   A   
LOOP1. . . . . . .  C ADDR   02C5H   A   
LOOP2. . . . . . .  C ADDR   02C3H   A   
LOOP4. . . . . . .  C ADDR   0307H   A   
NEXT . . . . . . .  C ADDR   02E6H   A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
PRINT. . . . . . .  C ADDR   0388H   A   
READNIBBLE . . . .  C ADDR   02FFH   A   
SECONDLINE . . . .  C ADDR   0368H   A   
SP . . . . . . . .  D ADDR   0081H   A   
SPACE. . . . . . .  C ADDR   037BH   A   
START. . . . . . .  C ADDR   0200H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
